#!/usr/bin/env python3
"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""

from math import sqrt
from common import counter
import time
import sys
import logging

logging.basicConfig(
    level=logging.INFO,
    stream=sys.stderr,
    format='%(levelname)s: %(message)s')

def main():
    p_gen = pent_gen(start=9)
    pent_list = [ 1, 5,12,22,35,51,70,92]
    for a in counter(3):
        for b in reversed(range(1,a)):
            delta  = pent_list[a] - pent_list[b]
            epsilon= pent_list[a] + pent_list[b]
            while epsilon > pent_list[-1]:
                pent_list.append(next(p_gen))
            if delta in pent_list and epsilon in pent_list:
                logging.info(
                    "delta: {:d}, beta: {:d}, alpha: {:d}, epsilon: {:d}".format(
                        delta, pent_list[b], pent_list[a], epsilon))
                break

# delta < beta < alpha < epsilon

def pent_gen(lim=None,start=1):
    for i in counter(start):
        pent = i*(3*i-1)/2
        if lim and pent >= lim:
            break
        yield int(pent)

if __name__ == "__main__":
    start = time.time()
    main()
    logging.info('That took {:4.2f} seconds'.format(time.time() - start))

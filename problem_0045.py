#!/usr/bin/env python3
"""
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
Pentagonal      Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.
Find the next triangle number that is also pentagonal and hexagonal.
"""

import time
import sys
import logging

from itertools import count

logging.basicConfig(
    stream=sys.stderr,
    level=logging.INFO,
    format='%(levelname)s: %(message)s')

def main():
    p_gen = pent_gen()
    t_gen = tri_gen()
    pent_list = [next(p_gen)]
    tri_list = [next(t_gen)]
    first = True
    for n in count(143):
        hex_num = n*(2*n-1)
        while hex_num > pent_list[-1]:
            pent_list.append(next(p_gen))
        while hex_num > tri_list[-1]:
            tri_list.append(next(t_gen))
        if hex_num in pent_list and hex_num in tri_list:
            if not first:
                print('Answer: {}'.format(hex_num))
                break
            first = False
            logging.info('First tri, hex and pen is {}'.format(hex_num))

def pent_gen():
    for n in count(1):
        yield n*(3*n-1)/2

def tri_gen():
    for n in count(1):
        yield n*(n+1)/2

if __name__ == "__main__":
    start = time.time()
    main()
    logging.info('That took {:4.2f} seconds'.format(time.time() - start))
